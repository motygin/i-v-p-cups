#summary Notes on installation of the set of virtual printers through a CUPS backend.

= Introduction =

For providing CUPS _ps-vprinter_ backend one has to add as root the script `ps-vprinter` to `/usr/lib/cups/backend` directory and change permissions:
{{{
chmod 755 /usr/lib/cups/backend/ps-vprinter
}}}
(on some systems it should be `chmod 1755 â€¦`, see `stat --format=%a /usr/lib/cups/backend/scsi`)

Besides, add the script `virtprintd` to some directory in the `PATH`, for example to `/usr/local/bin` and 
{{{
chmod +x /usr/local/bin/virtprintd
}}}

If you are going to use virtual printers to print (save) to _djvu_, _pdf_ or _ps_ files, then add the scripts `printkit_djvu`, `printkit_pdf`, `printkit_ps` to some directory in the `PATH`, for example to `/usr/local/bin` and
{{{
chmod +x printkit_djvu
chmod +x printkit_pdf
chmod +x printkit_ps
}}}

It is highly recommended to install the program `gtklp`. Being installed as CUPS backend through the virtual printer, it gives a uniform approach to your printer from all applications.  

For creation of output file _ps-vprinter_ needs a general postscript PPD file (it is better if it supports colour output). The standard `/usr/share/cups/model/Postscript-level2.ppd` can be used if it exists. If no, or for better result it can be useful to add to `/usr/share/cups/model` the PPD file from _cups-pdf_ (further `CUPS-PDF.ppd`) or the free AdobeTM Distiller ppd file from
[http://download.adobe.com/pub/adobe/printerdrivers/win/all/ppdfiles/adobe.zip]

= Setting the CUPS printers =

It can be done through the Web interface [http://localhost:631/admin] or a command-line program called `lpadmin`:

To add the CUPS PDF virtual printer using `CUPS-PDF.ppd` do as root 
{{{
lpadmin -p Save_as_PDF -v ps-vprinter:/pdf -E \
-P /usr/share/cups/model/CUPS-PDF.ppd -D "Print to a PDF file" \
-L "Interactive PDF Backend via /usr/lib/cups/backend/ps-vprinter"
}}}

To add the CUPS PS virtual printer using `CUPS-PDF.ppd` do as root
{{{ 
lpadmin -p Save_as_PS -v ps-vprinter:/ps -E \
-P /usr/share/cups/model/CUPS-PDF.ppd -D "Print to a PS file" \
-L "Interactive PS Backend via /usr/lib/cups/backend/ps-vprinter"
}}}

To add the CUPS DJVU virtual printer using `CUPS-PDF.ppd` do as root
{{{
lpadmin -p Save_as_DJVU -v ps-vprinter:/djvu -E \
-P /usr/share/cups/model/CUPS-PDF.ppd -D "Print to a DJVU file" \
-L "Interactive DJVU Backend via /usr/lib/cups/backend/ps-vprinter"
}}}

To add `gtklp` as the CUPS printer using `CUPS-PDF.ppd` do as root 
{{{
lpadmin -p <NameOfYourPrinter>_via_gtklp -v "ps-vprinter:/printer-><NameOfYourPrinter>" \
-E -P /usr/share/cups/model/CUPS-PDF.ppd \
-D "Print to <NameOfYourPrinter> via gtklp" \
-L "Print to printer <NameOfYourPrinter> via gtklp"
}}}

Here {{{<NameOfYourPrinter>}}} is the name of your printer device (e.g. Xerox_3250) in CUPS (see `lpstat -a`)

Now in any print dialog we should have printers
{{{Save_as_DJVU}}}, {{{Save_as_PDF}}}, {{{Save_as_PS}}}, {{{<NameOfYourPrinter>_via_gtklp}}}

Note that when printing through printkit_pdf, printkit_djvu it is possible to add files to existing ones.

== Alternative way of installation: ==

One can also use 
{{{
sh ./install.sh <list of devices>
}}}
as root for automatic installation. The script installs scripts, the backend, and sets djvu, pdf, and ps virtual printers in CUPS with `CUPS-PDF.ppd`.

The list of devices can include `djvu`, `pdf`, `ps` - then the corresponding virtual printers are installed. If it is not `djvu`, `pdf`, `ps`, then the parameter is treated as a printer name and the script adds `gtklp` interface with this printer being the default destination for `gtklp`

Example (installing `djvu` and `pdf` virtual printers and `gtklp` as CUPS backends; `gtklp` default destination is {{{Xerox_3250}}} - assuming that this printer has been installed in CUPS, see `lpstat -a`):
{{{ 
sh ./install.sh djvu pdf Xerox_3250
}}}

== Running the daemon: ==

Interaction with user is organized through the daemon script `virtprintd` which should be run with the rights of user.

A simple way to invoke the daemon is to add `/usr/local/bin/virtprintd start &` to autostart of your DE (kde, xfce,...)

To stop the daemon use the command `virtprintd stop`

= Details =

Semaphore files which are used for inter-process interaction are kept in `tmpfs` (filesystem in RAM); it is assumed that `/dev/shm` is assigned as `tmpfs`.

= Algorithm =
The daemon _virtprintd_ waits till cups backend _ps-vprinter_ creates the directory `/dev/shm/$USER-virtprint`. Then it takes name of a PS file prepared by the cups backend from the file `ps-done` or `pdf-done` or `djvu-done` or `printer-done` and process the ps file to corresponding print tool: `printkit_ps`, `printkit_pdf`, `printkit_djvu`, or to `gtklp`

In latter case the file `copies` contains the number of copies, the file `printer` contains the name of printer for gtklp dialogue.

`/tmp/$USER-ps-files` is the place where the temporary postscript file is kept